
FROM balenalib/%%BALENA_ARCH%%-debian-python:3.7 AS grafana

WORKDIR /usr/share/grafana

ARG BALENA_ARCH=%%BALENA_ARCH%%
ARG GRAFANA_VERSION=7.5.3
ARG GRAFANA_URL=https://dl.grafana.com/oss/release

# set pipefail before running shell commands with a pipe
# https://github.com/hadolint/hadolint/wiki/DL4006
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# download and extract grafana
RUN case "$BALENA_ARCH" in \
        'rpi') GRAFANA_PACKAGE="grafana-${GRAFANA_VERSION}.linux-armv6.tar.gz" ;; \
        'aarch64') GRAFANA_PACKAGE="grafana-${GRAFANA_VERSION}.linux-arm64.tar.gz" ;; \
        'armv7hf') GRAFANA_PACKAGE="grafana-${GRAFANA_VERSION}.linux-armv7.tar.gz" ;; \
        'amd64') GRAFANA_PACKAGE="grafana-${GRAFANA_VERSION}.linux-amd64.tar.gz" ;; \
        *) echo >&2 "error: unsupported architecture ($BALENA_ARCH)"; exit 1 ;; \
    esac && curl -L $GRAFANA_URL/$GRAFANA_PACKAGE | tar xzv --strip-components 1

# install dependency needed by update-dashboard script
RUN pip install -t /usr/src/python-packages/ stringcase

FROM klutchell/buildroot-rootfs-%%BALENA_ARCH%%:2020.11 AS buildroot

# copy buildroot package file
COPY package.cfg ./package.cfg

RUN support/kconfig/merge_config.sh -m .config package.cfg

RUN make olddefconfig && make source 

RUN make

USER root

WORKDIR /rootfs

# extract the rootfs so we can just COPY in future layers
RUN tar xpf /home/br-user/output/images/rootfs.tar -C /rootfs


###############################
#        Final Image          #
###############################
FROM scratch

COPY --from=buildroot rootfs/ /

# copy grafana
COPY --from=grafana /usr/share/grafana /usr/share/grafana
# COPY --from=grafana /lib/ld-linux-aarch64.so.1 /lib/ld-linux-aarch64.so.1

# copy python modules and files
COPY --from=grafana /usr/src/python-packages /usr/src/python-packages

# copy grafana files
COPY ./provisioning /usr/share/grafana/conf/provisioning

WORKDIR /usr/src/app

COPY ./entry.sh .

COPY templates ./templates

COPY ./*.py ./

CMD [ "/bin/busybox", "sh", "entry.sh" ]
