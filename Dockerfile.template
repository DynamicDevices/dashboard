FROM balenalib/%%BALENA_ARCH%%-debian-python:3.7 as builder

RUN install_packages \
      libfontconfig1

WORKDIR /usr/src/app
COPY ./download.sh .
RUN ./download.sh "%%BALENA_ARCH%%"

# install grafana
RUN  dpkg -i /tmp/grafana.deb && rm /tmp/grafana.deb

# install tools needed for dockerizing the app
RUN install_packages git rsync binutils file

RUN pip install git+https://github.com/larsks/dockerize

RUN dockerize -n --verbose -o /usr/src/app/dockerized-grafana/ \
      # create grafana user and group
      -u grafana -g grafana \
      # copy default configuration file (https://grafana.com/docs/grafana/latest/administration/configuration/#linux)
      -a /etc/grafana/grafana.ini /etc/grafana/grafana.ini \
      # include grafana-server
      $(readlink -f $(which grafana-server))  \
      # find location of libfontconfig1 shared libraries and include them
      `dpkg -L libfontconfig1 | grep .so`

# install dependency needed by update-dashboard script
RUN pip install -t /usr/src/python-packages/ stringcase

RUN pip uninstall dockerize -y

FROM klutchell/buildroot-rootfs-%%BALENA_ARCH%%:2020.11 as build

# copy buildroot package file
COPY package.cfg ./package.cfg

RUN support/kconfig/merge_config.sh -m .config package.cfg

RUN make olddefconfig && make source 

RUN make

USER root

WORKDIR /rootfs

# extract the rootfs so we can just COPY in future layers
RUN tar xpf /home/br-user/output/images/rootfs.tar -C /rootfs


###############################
#        Final Image          #
###############################
FROM scratch

COPY --from=build rootfs/ /

# copy dockerized grafana
COPY --from=builder /usr/src/app/dockerized-grafana/ /

# copy python modules and files
COPY --from=builder /usr/src/python-packages /usr/src/python-packages

# copy grafana files
COPY --from=builder /usr/share/grafana /usr/share/grafana
COPY ./provisioning /usr/share/grafana/conf/provisioning

WORKDIR /usr/src/app

COPY ./entry.sh .

COPY templates ./templates

COPY ./*.py ./

CMD [ "/bin/busybox", "sh", "entry.sh" ]
